{
	"info": {
		"_postman_id": "dff3a3e5-cac1-45ac-9578-ebe07f4c7ccf",
		"name": "group_18",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "First",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_method",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/get_method?name=Artsiom&age=21",
					"host": [
						"{{url}}"
					],
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "Artsiom"
						},
						{
							"key": "age",
							"value": "21"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"token\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Artsiom",
							"type": "text"
						},
						{
							"key": "password",
							"value": "ckgukc",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "login",
							"value": "artsiom",
							"disabled": true
						},
						{
							"key": "password",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Your test structure\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.eql({\r",
							"        \"person\": {\r",
							"        \"u_age\": 21,\r",
							"        \"u_name\": [\r",
							"            null,\r",
							"            3000,\r",
							"            21\r",
							"        ],\r",
							"        \"u_salary_1_5_year\": 12000\r",
							"    },\r",
							"    \"qa_salary_after_12_months\": 8700.0,\r",
							"    \"qa_salary_after_6_months\": 6000,\r",
							"    \"start_qa_salary\": 3000\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"test salary\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.qa_salary_after_6_months).to.eql(responseJson.start_qa_salary*2);\r",
							"    pm.expect(responseJson.qa_salary_after_12_months).to.eql(responseJson.start_qa_salary*2.9);\r",
							"    pm.expect(responseJson.person.u_salary_1_5_year).to.eql(responseJson.start_qa_salary*4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": 21,\r\n    \"salary\": 3000,\r\n    \"name\": \"Artsiom\",\r\n    \"auth_token\":\"{{token}}\" \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Your test structure\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.eql({\r",
							"        \"age\": 21,\r",
							"    \"name\": \"Artsiom\",\r",
							"    \"salary\": [\r",
							"        3000,\r",
							"        \"6000\",\r",
							"        \"9000\"\r",
							"    ]\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Correct elements\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log (jsonData.salary[0],jsonData.salary[1],jsonData.salary[2])\r",
							"    let salary = jsonData.salary[0];\r",
							"    let salary2 = parseInt((jsonData.salary[1])/2);\r",
							"    let salary3 = parseInt((jsonData.salary[2])/3);\r",
							"\r",
							"    pm.test(\"eql salary\", function () {\r",
							"        let jsonData = pm.response.json();\r",
							"        pm.expect(salary).to.eql(salary2);\r",
							"        pm.expect(salary).to.eql(salary3);\r",
							"    });  \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/new_data",
					"host": [
						"{{url}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Your test structure\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.eql({\r",
							"        \"age\": 4,\r",
							"    \"daily_food\": 31.2,\r",
							"    \"daily_sleep\": 6500.0,\r",
							"    \"name\": \"Shine\"\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Correct elements\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(parseInt(pm.variables.get(\"weight\"))).to.eql(parseInt(jsonData.daily_food/0.012))\r",
							"    pm.expect(parseInt(pm.variables.get(\"weight\"))).to.eql(parseInt(jsonData.daily_sleep/2.5))\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "4",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "{{weight}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Shine",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/test_pet_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Your test structure\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.eql({\r",
							"        \"age\": \"21\",\r",
							"    \"family\": {\r",
							"        \"children\": [\r",
							"            [\r",
							"                \"Alex\",\r",
							"                24\r",
							"            ],\r",
							"            [\r",
							"                \"Kate\",\r",
							"                12\r",
							"            ]\r",
							"        ],\r",
							"        \"u_salary_1_5_year\": 12000\r",
							"    },\r",
							"    \"name\": \"Artsiom\",\r",
							"    \"salary\": 3000\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Value corresponds age, name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.environment.set(\"age\", jsonData.age);\r",
							"    pm.environment.set(\"name\", jsonData.name);\r",
							"    pm.expect(jsonData.age).to.eql(pm.variables.get(\"age\"));\r",
							"    pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "21",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "3000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Artsiom",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/get_test_user",
					"host": [
						"{{url}}"
					],
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Pass through the environment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var randomElement = _.sample(jsonData);\r",
							"    postman.setEnvironmentVariable (\"curr_code\", randomElement.Cur_ID);\r",
							"    console.log(randomElement.Cur_ID);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/currency",
					"host": [
						"{{url}}"
					],
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Your test structure\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.eql({\r",
							"        \"Cur_Abbreviation\": \"ALL\",\r",
							"    \"Cur_ID\": 326,\r",
							"    \"Cur_Name\": \"Леков\",\r",
							"    \"Cur_OfficialRate\": 2.5132,\r",
							"    \"Cur_Scale\": 100,\r",
							"    \"Date\": \"2021-05-17T00:00:00\"\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{curr_code}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/curr_byn",
					"host": [
						"{{url}}"
					],
					"path": [
						"curr_byn"
					],
					"query": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"disabled": true
						},
						{
							"key": "curr_code",
							"value": "{{curr_code}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}